# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    # branches: [main]
  pull_request:
    # branches: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
  #     # Runs a single command using the runners shell
  #     - name: Yandex Cloud CR "Login" Action for GitHub Actions
  #       uses: yc-actions/yc-cr-login@v1
  #       with:
  #         yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

  #     - name: Build, tag, and push front image to Yandex Cloud Container Registry
  #       env:
  #         CR_REGISTRY: crpsekeafeo0j7cjq530
  #         CR_REPOSITORY: front-starter
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
  #         docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
  # deploy:
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Deploy COI VM
  #       id: deploy-coi
  #       uses: yc-actions/yc-coi-deploy@v1
  #       env:
  #         FRONT_IMAGE_URL: cr.yandex/crpsekeafeo0j7cjq530/front-starter:${{ github.sha }}
  #         SSH_KEY: ${{ secrets.SSH_KEY }}
  #       with:
  #         yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
  #         folder-id: b1gke16sajj09en730l2
  #         vm-name: front-starter
  #         vm-service-account-id: ajeeshqgd7ku5q8128ju
  #         vm-cores: 2
  #         vm-memory: 1 GB
  #         vm-core-fraction: 20
  #         vm-zone-id: ru-central1-b
  #         vm-subnet-id: e2legjppt5nu2h203b1j
  #         user-data-path: './user-data.yml'
  #         docker-compose-path: './docker-compose.yml'
