# This is a basic workflow to help you get started with Actions

name: Deploy to YA sls container

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CR_HOST: cr.yandex
  CR_IMAGE: next-starter
  SC_NAME: next-starter
  CR_REPOSITORY: crpsekeafeo0j7cjq530
  CR_URL: $CR_HOST/$CR_REPOSITORY/$CR_IMAGE

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build, tag, and push front image to Yandex Cloud Container Registry
        run: |
          docker build -t ${{ env.CR_URL}}:${{ github.sha }} .
          docker push ${{ env.CR_URL}}:${{ github.sha }}
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Serverless Container
        id: deploy-sls-container
        uses: yc-actions/yc-sls-container-deploy@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          container-name: ${{ env.SC_NAME}}
          folder-id: b1gke16sajj09en730l2
          revision-service-account-id: ajeeshqgd7ku5q8128ju
          revision-cores: 1
          revision-memory: 128Mb
          revision-core-fraction: 5
          revision-concurrency: 8
          revision-image-url: ${{ env.CR_HOST}}/${{ env.CR_REPOSITORY}}/${{ env.CR_IMAGE}}:${{ github.sha }}
          revision-env: |
            ENV_VARIABLE=${{ secrets.ENV_VARIABLE }}
            NEXT_PUBLIC_ENV_VARIABLE=${{ secrets.NEXT_PUBLIC_ENV_VARIABLE }}
            ANALYZE=${{ secrets.ANALYZE }}
            NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID }}
          revision-execution-timeout: 10
